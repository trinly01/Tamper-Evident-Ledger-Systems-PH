{
  "condition_operation_examples": {
    "description": "Examples of how to configure the check_status condition operation in talaan_chain_system",
    
    "method_1_filter_object": {
      "name": "Check Status (Filter Method)",
      "operation": "condition",
      "key": "check_status",
      "options": {
        "filter": {
          "$validate_script": {
            "status": {
              "_eq": "valid"
            }
          }
        }
      },
      "resolve": "log_success",
      "reject": "log_error",
      "note": "If status equals 'valid' → log_success, otherwise → log_error"
    },

    "method_2_simple_expression": {
      "name": "Check Status (Expression Method - RECOMMENDED)",
      "operation": "condition",
      "key": "check_status",
      "options": {
        "filter": "{{$validate_script.status}} == \"valid\""
      },
      "resolve": "log_success",
      "reject": "log_error",
      "note": "Simpler and more readable. Use this one!"
    },

    "alternative_checks": {
      "check_has_errors": {
        "description": "Check if there are any invalid entries",
        "filter": {
          "$validate_script": {
            "invalid": {
              "_nempty": true
            }
          }
        },
        "or_expression": "{{$validate_script.invalid.length}} > 0"
      },

      "check_critical_failure": {
        "description": "Check if there are 5+ errors (critical)",
        "filter": {
          "$validate_script": {
            "invalid.length": {
              "_gte": 5
            }
          }
        },
        "or_expression": "{{$validate_script.invalid.length}} >= 5"
      },

      "check_reached_genesis": {
        "description": "Check if validation reached the genesis entry",
        "filter": {
          "$validate_script": {
            "reached_genesis": {
              "_eq": true
            }
          }
        },
        "or_expression": "{{$validate_script.reached_genesis}} == true"
      },

      "check_invalid_status": {
        "description": "Alternative: Check for invalid status (reverse logic)",
        "filter": {
          "$validate_script": {
            "status": {
              "_eq": "invalid"
            }
          }
        },
        "or_expression": "{{$validate_script.status}} == \"invalid\"",
        "note": "Less intuitive - use the 'valid' check instead"
      }
    },

    "complex_conditions": {
      "critical_failure_and_condition": {
        "description": "Alert only if invalid AND has 5+ errors",
        "filter": {
          "_and": [
            {
              "$validate_script": {
                "status": {
                  "_eq": "invalid"
                }
              }
            },
            {
              "$validate_script": {
                "invalid.length": {
                  "_gte": 5
                }
              }
            }
          ]
        },
        "or_expression": "{{$validate_script.status}} == \"invalid\" && {{$validate_script.invalid.length}} >= 5"
      },

      "any_problem_or_condition": {
        "description": "Check if invalid OR didn't reach genesis",
        "filter": {
          "_or": [
            {
              "$validate_script": {
                "status": {
                  "_eq": "invalid"
                }
              }
            },
            {
              "$validate_script": {
                "reached_genesis": {
                  "_eq": false
                }
              }
            }
          ]
        },
        "or_expression": "{{$validate_script.status}} == \"invalid\" || {{$validate_script.reached_genesis}} == false"
      }
    }
  },

  "talaan_chain_system_ui_mapping": {
    "where_to_use": "In talaan_chain_system Flow Builder, when you add a 'Condition' operation",
    "configuration_steps": [
      "1. Add operation → Select 'Condition'",
      "2. Set Key: 'check_status'",
      "3. Set Name: 'Check Validation Status'",
      "4. In Rule field, enter: {{$validate_script.status}} == \"valid\"",
      "5. Set Resolve (TRUE path): log_success",
      "6. Set Reject (FALSE path): log_error"
    ],
    "note": "You don't need to import this JSON file - configure directly in talaan_chain_system UI"
  },

  "recommended_for_validator": {
    "use_this": "{{$validate_script.status}} == \"valid\"",
    "why": "Simple, clear, and intuitive - TRUE means chain is valid"
  }
}

